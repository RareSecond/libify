{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/spotify": {
      "get": {
        "operationId": "AuthController_spotifyAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/spotify/callback": {
      "get": {
        "operationId": "AuthController_spotifyCallback",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/library/sync/status": {
      "get": {
        "operationId": "LibraryController_getSyncStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Sync status retrieved"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get library sync status",
        "tags": [
          "library"
        ]
      }
    },
    "/library/sync": {
      "post": {
        "operationId": "LibraryController_syncLibrary",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Library sync completed"
          },
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Sync user library from Spotify",
        "tags": [
          "library"
        ]
      }
    },
    "/library/sync/recent": {
      "post": {
        "operationId": "LibraryController_syncRecentlyPlayed",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Recently played tracks synced"
          },
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Sync recently played tracks from Spotify",
        "tags": [
          "library"
        ]
      }
    }
  },
  "info": {
    "title": "Mynance API",
    "description": "The Mynance API description",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [
    {
      "name": "mynance",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "UserDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "email",
          "id",
          "provider",
          "updatedAt"
        ]
      }
    }
  }
}