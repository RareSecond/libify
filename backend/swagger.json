{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/auth/token": {
      "get": {
        "operationId": "AuthController_getAccessToken",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Spotify access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/spotify": {
      "get": {
        "operationId": "AuthController_spotifyAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/spotify/callback": {
      "get": {
        "operationId": "AuthController_spotifyCallback",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/health/services": {
      "get": {
        "operationId": "HealthController_checkAllServices",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/health/database": {
      "get": {
        "operationId": "HealthController_checkDatabase",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/health/redis": {
      "get": {
        "operationId": "HealthController_checkRedis",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/library/tracks/{trackId}/tags": {
      "post": {
        "operationId": "LibraryController_addTagToTrack",
        "parameters": [
          {
            "name": "trackId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTagToTrackDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag added to track"
          },
          "201": {
            "description": ""
          },
          "404": {
            "description": "Track or tag not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Add a tag to a track",
        "tags": [
          "library"
        ]
      }
    },
    "/library/tags": {
      "post": {
        "operationId": "LibraryController_createTag",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tag created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new tag",
        "tags": [
          "library"
        ]
      },
      "get": {
        "operationId": "LibraryController_getTags",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of tags",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all user tags",
        "tags": [
          "library"
        ]
      }
    },
    "/library/tags/{tagId}": {
      "delete": {
        "operationId": "LibraryController_deleteTag",
        "parameters": [
          {
            "name": "tagId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": "Tag deleted"
          },
          "404": {
            "description": "Tag not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a tag",
        "tags": [
          "library"
        ]
      },
      "put": {
        "operationId": "LibraryController_updateTag",
        "parameters": [
          {
            "name": "tagId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Tag not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a tag",
        "tags": [
          "library"
        ]
      }
    },
    "/library/albums": {
      "get": {
        "operationId": "LibraryController_getAlbums",
        "parameters": [
          {
            "name": "genres",
            "required": false,
            "in": "query",
            "description": "Filter by artist genres (albums matching any of the genres)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Page size",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 24,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search query for album name or artist name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string",
              "enum": [
                "artist",
                "avgRating",
                "lastPlayed",
                "name",
                "totalPlayCount",
                "trackCount"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of albums",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAlbumsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all albums in user library",
        "tags": [
          "library"
        ]
      }
    },
    "/library/albums/{artist}/{album}/tracks": {
      "get": {
        "operationId": "LibraryController_getAlbumTracks",
        "parameters": [
          {
            "name": "artist",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "album",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tracks from the album",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumTracksResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get tracks from a specific album",
        "tags": [
          "library"
        ]
      }
    },
    "/library/artists": {
      "get": {
        "operationId": "LibraryController_getArtists",
        "parameters": [
          {
            "name": "genres",
            "required": false,
            "in": "query",
            "description": "Filter by genres (artists matching any of the genres)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Page size",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 24,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search query for artist name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string",
              "enum": [
                "albumCount",
                "avgRating",
                "lastPlayed",
                "name",
                "totalPlayCount",
                "trackCount"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of artists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedArtistsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all artists in user library",
        "tags": [
          "library"
        ]
      }
    },
    "/library/artists/{artist}/tracks": {
      "get": {
        "operationId": "LibraryController_getArtistTracks",
        "parameters": [
          {
            "name": "artist",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tracks from the artist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistTracksResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get tracks from a specific artist",
        "tags": [
          "library"
        ]
      }
    },
    "/library/genres": {
      "get": {
        "operationId": "LibraryController_getGenres",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of unique genres",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all unique genres in user library",
        "tags": [
          "library"
        ]
      }
    },
    "/library/play-history": {
      "get": {
        "operationId": "LibraryController_getPlayHistory",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Page size",
            "schema": {
              "minimum": 1,
              "maximum": 1000,
              "default": 50,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search query for title, artist or album",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trackId",
            "required": false,
            "in": "query",
            "description": "Filter by track ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of play history",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPlayHistoryDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get user play history",
        "tags": [
          "library"
        ]
      }
    },
    "/library/sync/count": {
      "get": {
        "operationId": "LibraryController_getSyncItemCounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Item counts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncItemCountsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Pre-count items to be synced (tracks, albums, playlists)",
        "tags": [
          "library"
        ]
      }
    },
    "/library/sync/status": {
      "get": {
        "operationId": "LibraryController_getSyncLibraryStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Sync status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncStatusDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get library sync status",
        "tags": [
          "library"
        ]
      }
    },
    "/library/sync/{jobId}": {
      "get": {
        "operationId": "LibraryController_getSyncStatusByJobId",
        "parameters": [
          {
            "name": "jobId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sync job status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncJobStatusDto"
                }
              }
            }
          },
          "404": {
            "description": "Job not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get sync job status by job ID",
        "tags": [
          "library"
        ]
      }
    },
    "/library/tracks/spotify/{spotifyId}": {
      "get": {
        "operationId": "LibraryController_getTrackBySpotifyId",
        "parameters": [
          {
            "name": "spotifyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Track details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackDto"
                }
              }
            }
          },
          "404": {
            "description": "Track not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get track by Spotify ID",
        "tags": [
          "library"
        ]
      }
    },
    "/library/tracks": {
      "get": {
        "operationId": "LibraryController_getTracks",
        "parameters": [
          {
            "name": "genres",
            "required": false,
            "in": "query",
            "description": "Filter by artist genres (tracks matching any of the genres)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "minRating",
            "required": false,
            "in": "query",
            "description": "Filter by minimum rating",
            "schema": {
              "minimum": 1,
              "maximum": 5,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Page size",
            "schema": {
              "minimum": 1,
              "maximum": 1000,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search query for title, artist or album",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string",
              "enum": [
                "title",
                "artist",
                "album",
                "addedAt",
                "lastPlayedAt",
                "totalPlayCount",
                "rating",
                "duration"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "sourceTypes",
            "required": false,
            "in": "query",
            "description": "Filter by source types",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LIKED_SONGS",
                  "PLAYLIST",
                  "ALBUM",
                  "ARTIST_TOP_TRACKS"
                ]
              }
            }
          },
          {
            "name": "tagIds",
            "required": false,
            "in": "query",
            "description": "Filter by tag IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of user tracks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTracksDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get user tracks",
        "tags": [
          "library"
        ]
      }
    },
    "/library/tracks/{trackId}/play": {
      "post": {
        "operationId": "LibraryController_playTrack",
        "parameters": [
          {
            "name": "trackId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Track started playing"
          },
          "201": {
            "description": ""
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Play a track on Spotify",
        "tags": [
          "library"
        ]
      }
    },
    "/library/tracks/{trackId}/tags/{tagId}": {
      "delete": {
        "operationId": "LibraryController_removeTagFromTrack",
        "parameters": [
          {
            "name": "trackId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag removed from track"
          },
          "404": {
            "description": "Track not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remove a tag from a track",
        "tags": [
          "library"
        ]
      }
    },
    "/library/sync": {
      "post": {
        "operationId": "LibraryController_syncLibrary",
        "parameters": [],
        "requestBody": {
          "required": false,
          "description": "Sync options to control what gets synced",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncOptionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sync job queued successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncJobResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncJobResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Start library sync job (non-blocking) with optional sync options",
        "tags": [
          "library"
        ]
      }
    },
    "/library/sync-plays": {
      "post": {
        "operationId": "LibraryController_syncPlays",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Play sync completed successfully"
          },
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Manually sync recently played tracks from Spotify",
        "tags": [
          "library"
        ]
      }
    },
    "/library/sync/recent": {
      "post": {
        "operationId": "LibraryController_syncRecentlyPlayed",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Quick sync job queued successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncJobResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncJobResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Start quick sync job (50 liked tracks, 10 albums, 3 playlists) - returns job ID for WebSocket progress",
        "tags": [
          "library"
        ]
      }
    },
    "/library/tracks/{trackId}/rating": {
      "put": {
        "operationId": "LibraryController_updateTrackRating",
        "parameters": [
          {
            "name": "trackId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRatingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rating updated"
          },
          "404": {
            "description": "Track not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update track rating",
        "tags": [
          "library"
        ]
      }
    },
    "/playlists": {
      "post": {
        "operationId": "PlaylistsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSmartPlaylistDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartPlaylistDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new smart playlist",
        "tags": [
          "playlists"
        ]
      },
      "get": {
        "operationId": "PlaylistsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SmartPlaylistWithTracksDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all smart playlists",
        "tags": [
          "playlists"
        ]
      }
    },
    "/playlists/{id}": {
      "get": {
        "operationId": "PlaylistsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartPlaylistWithTracksDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a smart playlist by ID",
        "tags": [
          "playlists"
        ]
      },
      "delete": {
        "operationId": "PlaylistsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a smart playlist",
        "tags": [
          "playlists"
        ]
      },
      "put": {
        "operationId": "PlaylistsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSmartPlaylistDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartPlaylistDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a smart playlist",
        "tags": [
          "playlists"
        ]
      }
    },
    "/playlists/{id}/tracks": {
      "get": {
        "operationId": "PlaylistsController_getTracks",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field to sort tracks by. If not provided, uses the playlist default order.",
            "schema": {
              "enum": [
                "title",
                "artist",
                "album",
                "duration",
                "totalPlayCount",
                "lastPlayedAt",
                "rating",
                "addedAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort direction (ascending or descending)",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get tracks for a smart playlist",
        "tags": [
          "playlists"
        ]
      }
    }
  },
  "info": {
    "title": "Libify API",
    "description": "Spotify library management API",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [
    {
      "name": "libify",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "TokenDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Spotify access token",
            "example": "BQD..."
          }
        },
        "required": [
          "accessToken"
        ]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "email",
          "id",
          "provider",
          "updatedAt"
        ]
      },
      "AddTagToTrackDto": {
        "type": "object",
        "properties": {
          "tagId": {
            "type": "string",
            "format": "uuid",
            "description": "Tag ID to add to the track"
          }
        },
        "required": [
          "tagId"
        ]
      },
      "CreateTagDto": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "pattern": "^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$",
            "description": "Tag color in hex format"
          },
          "name": {
            "type": "string",
            "description": "Tag name"
          }
        },
        "required": [
          "name"
        ]
      },
      "TagResponseDto": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "id",
          "name"
        ]
      },
      "AlbumDto": {
        "type": "object",
        "properties": {
          "albumArt": {
            "type": "string",
            "nullable": true,
            "description": "Album artwork URL"
          },
          "artist": {
            "type": "string",
            "description": "Album artist"
          },
          "artistGenres": {
            "description": "Array of genre names from the album artist",
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "avgRating": {
            "type": "number",
            "nullable": true,
            "description": "Average rating of rated tracks"
          },
          "firstAdded": {
            "format": "date-time",
            "type": "string",
            "description": "Date when first track from album was added"
          },
          "lastPlayed": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "description": "Date when any track from album was last played"
          },
          "name": {
            "type": "string",
            "description": "Album name"
          },
          "totalDuration": {
            "type": "number",
            "description": "Total duration of all tracks in milliseconds"
          },
          "totalPlayCount": {
            "type": "number",
            "description": "Total play count across all tracks"
          },
          "trackCount": {
            "type": "number",
            "description": "Number of tracks from this album in library"
          }
        },
        "required": [
          "albumArt",
          "artist",
          "artistGenres",
          "avgRating",
          "firstAdded",
          "lastPlayed",
          "name",
          "totalDuration",
          "totalPlayCount",
          "trackCount"
        ]
      },
      "PaginatedAlbumsDto": {
        "type": "object",
        "properties": {
          "albums": {
            "description": "List of albums",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlbumDto"
            }
          },
          "page": {
            "type": "number",
            "description": "Current page number"
          },
          "pageSize": {
            "type": "number",
            "description": "Number of items per page"
          },
          "total": {
            "type": "number",
            "description": "Total number of albums"
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages"
          }
        },
        "required": [
          "albums",
          "page",
          "pageSize",
          "total",
          "totalPages"
        ]
      },
      "TrackSourceDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "sourceId": {
            "type": "string",
            "description": "Spotify ID of the source"
          },
          "sourceName": {
            "type": "string",
            "description": "Name of the source (e.g., playlist name)"
          },
          "sourceType": {
            "type": "string",
            "description": "Type of source",
            "enum": [
              "LIKED_SONGS",
              "PLAYLIST",
              "ALBUM",
              "ARTIST_TOP_TRACKS"
            ]
          }
        },
        "required": [
          "createdAt",
          "id",
          "sourceType"
        ]
      },
      "TagDto": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "TrackDto": {
        "type": "object",
        "properties": {
          "addedAt": {
            "format": "date-time",
            "type": "string"
          },
          "album": {
            "type": "string"
          },
          "albumArt": {
            "type": "string"
          },
          "artist": {
            "type": "string"
          },
          "artistGenres": {
            "description": "Array of genre names from the track artist",
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "duration": {
            "type": "number",
            "description": "Duration in milliseconds"
          },
          "id": {
            "type": "string"
          },
          "lastPlayedAt": {
            "format": "date-time",
            "type": "string"
          },
          "ratedAt": {
            "format": "date-time",
            "type": "string"
          },
          "rating": {
            "type": "number",
            "maximum": 5,
            "minimum": 1
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackSourceDto"
            }
          },
          "spotifyId": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDto"
            }
          },
          "title": {
            "type": "string"
          },
          "totalPlayCount": {
            "type": "number"
          }
        },
        "required": [
          "addedAt",
          "artist",
          "artistGenres",
          "duration",
          "id",
          "sources",
          "spotifyId",
          "tags",
          "title",
          "totalPlayCount"
        ]
      },
      "AlbumTracksResponseDto": {
        "type": "object",
        "properties": {
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackDto"
            }
          }
        },
        "required": [
          "tracks"
        ]
      },
      "ArtistDto": {
        "type": "object",
        "properties": {
          "albumCount": {
            "type": "number",
            "description": "Number of albums by this artist"
          },
          "artistImage": {
            "type": "string",
            "nullable": true,
            "description": "Artist image URL"
          },
          "avgRating": {
            "type": "number",
            "nullable": true,
            "description": "Average rating across all rated tracks"
          },
          "firstAdded": {
            "format": "date-time",
            "type": "string",
            "description": "Date when first track was added"
          },
          "genres": {
            "description": "Array of genre names associated with this artist",
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lastPlayed": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "description": "Date when any track was last played"
          },
          "name": {
            "type": "string",
            "description": "Artist name"
          },
          "totalDuration": {
            "type": "number",
            "description": "Total duration of all tracks in milliseconds"
          },
          "totalPlayCount": {
            "type": "number",
            "description": "Total play count across all tracks"
          },
          "trackCount": {
            "type": "number",
            "description": "Number of tracks by this artist"
          }
        },
        "required": [
          "albumCount",
          "artistImage",
          "avgRating",
          "firstAdded",
          "genres",
          "lastPlayed",
          "name",
          "totalDuration",
          "totalPlayCount",
          "trackCount"
        ]
      },
      "PaginatedArtistsDto": {
        "type": "object",
        "properties": {
          "artists": {
            "description": "List of artists",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtistDto"
            }
          },
          "page": {
            "type": "number",
            "description": "Current page number"
          },
          "pageSize": {
            "type": "number",
            "description": "Number of items per page"
          },
          "total": {
            "type": "number",
            "description": "Total number of artists"
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages"
          }
        },
        "required": [
          "artists",
          "page",
          "pageSize",
          "total",
          "totalPages"
        ]
      },
      "ArtistTracksResponseDto": {
        "type": "object",
        "properties": {
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackDto"
            }
          }
        },
        "required": [
          "tracks"
        ]
      },
      "PlayHistoryItemDto": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "number",
            "description": "Duration listened in milliseconds",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "playedAt": {
            "format": "date-time",
            "type": "string"
          },
          "trackAlbum": {
            "type": "string"
          },
          "trackAlbumArt": {
            "type": "string"
          },
          "trackArtist": {
            "type": "string"
          },
          "trackDuration": {
            "type": "number",
            "description": "Track duration in milliseconds"
          },
          "trackId": {
            "type": "string"
          },
          "trackSpotifyId": {
            "type": "string"
          },
          "trackTitle": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "playedAt",
          "trackArtist",
          "trackDuration",
          "trackId",
          "trackSpotifyId",
          "trackTitle"
        ]
      },
      "PaginatedPlayHistoryDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayHistoryItemDto"
            }
          },
          "page": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          }
        },
        "required": [
          "items",
          "page",
          "pageSize",
          "total",
          "totalPages"
        ]
      },
      "SyncItemCountsDto": {
        "type": "object",
        "properties": {
          "albums": {
            "type": "number",
            "description": "Number of albums to sync"
          },
          "albumTracks": {
            "type": "number",
            "description": "Number of tracks within albums"
          },
          "playlists": {
            "type": "number",
            "description": "Number of playlists to sync"
          },
          "playlistTracks": {
            "type": "number",
            "description": "Number of tracks within playlists"
          },
          "tracks": {
            "type": "number",
            "description": "Number of liked tracks to sync"
          }
        },
        "required": [
          "albums",
          "playlists",
          "tracks"
        ]
      },
      "SyncStatusDto": {
        "type": "object",
        "properties": {
          "lastSync": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "description": "Last sync timestamp"
          },
          "totalAlbums": {
            "type": "number",
            "description": "Total number of albums in library"
          },
          "totalTracks": {
            "type": "number",
            "description": "Total number of tracks in library"
          }
        },
        "required": [
          "lastSync",
          "totalAlbums",
          "totalTracks"
        ]
      },
      "SyncCategoryProgressDto": {
        "type": "object",
        "properties": {
          "processed": {
            "type": "number",
            "description": "Number of items processed"
          },
          "total": {
            "type": "number",
            "description": "Total items to process"
          }
        },
        "required": [
          "processed",
          "total"
        ]
      },
      "SyncProgressBreakdownDto": {
        "type": "object",
        "properties": {
          "albums": {
            "description": "Album sync progress",
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncCategoryProgressDto"
              }
            ]
          },
          "playlists": {
            "description": "Playlist sync progress",
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncCategoryProgressDto"
              }
            ]
          },
          "tracks": {
            "description": "Track sync progress",
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncCategoryProgressDto"
              }
            ]
          }
        },
        "required": [
          "albums",
          "playlists",
          "tracks"
        ]
      },
      "SyncProgressDto": {
        "type": "object",
        "properties": {
          "breakdown": {
            "description": "Progress breakdown by category",
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncProgressBreakdownDto"
              }
            ]
          },
          "current": {
            "type": "number",
            "description": "Number of items processed in current phase"
          },
          "errorCount": {
            "type": "number",
            "description": "Number of non-fatal errors encountered"
          },
          "errors": {
            "description": "List of non-fatal errors encountered (deprecated, use errorCount for progress updates)",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "estimatedTimeRemaining": {
            "type": "number",
            "description": "Estimated time remaining in seconds"
          },
          "itemsPerSecond": {
            "type": "number",
            "description": "Processing speed (items per second)"
          },
          "message": {
            "type": "string",
            "description": "Human-readable status message"
          },
          "percentage": {
            "type": "number",
            "description": "Overall progress percentage (0-100)"
          },
          "phase": {
            "type": "string",
            "description": "Current sync phase",
            "enum": [
              "tracks",
              "albums",
              "playlists"
            ]
          },
          "total": {
            "type": "number",
            "description": "Total items to process in current phase"
          }
        },
        "required": [
          "current",
          "errorCount",
          "message",
          "percentage",
          "phase",
          "total"
        ]
      },
      "SyncJobStatusDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Job creation timestamp"
          },
          "jobId": {
            "type": "string",
            "description": "Unique job identifier"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "status": {
            "type": "string",
            "description": "Job status",
            "enum": [
              "queued",
              "active",
              "completed",
              "failed"
            ]
          },
          "completedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Job completion timestamp"
          },
          "failedReason": {
            "type": "string",
            "description": "Error message if job failed"
          },
          "progress": {
            "description": "Current progress information",
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncProgressDto"
              }
            ]
          },
          "result": {
            "type": "object",
            "description": "Final sync result"
          }
        },
        "required": [
          "jobId",
          "message",
          "status"
        ]
      },
      "PaginatedTracksDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackDto"
            }
          }
        },
        "required": [
          "page",
          "pageSize",
          "total",
          "totalPages",
          "tracks"
        ]
      },
      "SyncOptionsDto": {
        "type": "object",
        "properties": {
          "forceRefreshPlaylists": {
            "type": "boolean",
            "default": false,
            "description": "Force refresh all playlists, ignoring snapshot-based change detection. By default, playlists are only synced if their snapshot ID has changed since the last sync. Set to true to re-sync all playlists regardless of changes.",
            "example": false
          },
          "syncAlbums": {
            "type": "boolean",
            "default": true,
            "description": "Include saved albums in sync. When false, only liked tracks and playlists will be synced.",
            "example": true
          },
          "syncLikedTracks": {
            "type": "boolean",
            "default": true,
            "description": "Include liked tracks (saved songs) in sync. When false, only albums and playlists will be synced.",
            "example": true
          },
          "syncPlaylists": {
            "type": "boolean",
            "default": true,
            "description": "Include playlists in sync. When false, only liked tracks and albums will be synced.",
            "example": true
          }
        }
      },
      "SyncJobResponseDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Job creation timestamp"
          },
          "jobId": {
            "type": "string",
            "description": "Unique job identifier"
          },
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "status": {
            "type": "string",
            "description": "Job status",
            "enum": [
              "queued",
              "active",
              "completed",
              "failed"
            ]
          }
        },
        "required": [
          "jobId",
          "message",
          "status"
        ]
      },
      "UpdateTagDto": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "pattern": "^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$",
            "description": "Tag color in hex format"
          },
          "name": {
            "type": "string",
            "description": "Tag name"
          }
        }
      },
      "UpdateRatingDto": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "minimum": 0.5,
            "maximum": 5,
            "description": "Rating value (0.5-5 in 0.5 increments)",
            "example": 4.5
          }
        },
        "required": [
          "rating"
        ]
      },
      "PlaylistRuleDto": {
        "type": "object",
        "properties": {
          "daysValue": {
            "type": "number",
            "description": "For date rules - number of days"
          },
          "field": {
            "enum": [
              "album",
              "artist",
              "dateAdded",
              "duration",
              "lastPlayed",
              "playCount",
              "rating",
              "tag",
              "title"
            ],
            "type": "string"
          },
          "numberValue": {
            "type": "number"
          },
          "operator": {
            "enum": [
              "contains",
              "endsWith",
              "equals",
              "greaterThan",
              "hasAnyTag",
              "hasNoTags",
              "hasTag",
              "inLast",
              "isNotNull",
              "isNull",
              "lessThan",
              "notContains",
              "notEquals",
              "notHasTag",
              "notInLast",
              "startsWith"
            ],
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "field",
          "operator"
        ]
      },
      "PlaylistCriteriaDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Limit number of tracks"
          },
          "logic": {
            "enum": [
              "and",
              "or"
            ],
            "type": "string"
          },
          "orderBy": {
            "type": "string",
            "description": "Order by field"
          },
          "orderDirection": {
            "type": "object",
            "description": "Order direction"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaylistRuleDto"
            }
          }
        },
        "required": [
          "logic",
          "rules"
        ]
      },
      "CreateSmartPlaylistDto": {
        "type": "object",
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/PlaylistCriteriaDto"
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "criteria",
          "name"
        ]
      },
      "SmartPlaylistDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "criteria": {
            "$ref": "#/components/schemas/PlaylistCriteriaDto"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "lastUpdated": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "criteria",
          "id",
          "isActive",
          "lastUpdated",
          "name"
        ]
      },
      "SmartPlaylistWithTracksDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "criteria": {
            "$ref": "#/components/schemas/PlaylistCriteriaDto"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "lastUpdated": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "trackCount": {
            "type": "number"
          }
        },
        "required": [
          "createdAt",
          "criteria",
          "id",
          "isActive",
          "lastUpdated",
          "name",
          "trackCount"
        ]
      },
      "UpdateSmartPlaylistDto": {
        "type": "object",
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/PlaylistCriteriaDto"
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}